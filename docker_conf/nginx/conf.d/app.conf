upstream app {
  # fail_timeout=0 means we always retry an upstream even if it failed
  # to return a good HTTP response

  # Unix domain servers
  server unix:/tmp/app_1.sock fail_timeout=0;
  # server unix:/tmp/app_2.sock fail_timeout=0;
}

server {
  client_max_body_size 4G;

  listen              80;
  listen              443 ssl;
  keepalive_timeout   70;

  ssl_certificate     /app/certs/fullchain.pem;
  ssl_certificate_key /app/certs/client_cert.key;
  ssl_dhparam         /app/certs/dhparam.pem;

  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_prefer_server_ciphers on;
  ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
  ssl_ecdh_curve secp384r1;
  ssl_session_cache shared:SSL:10m;
  ssl_session_tickets off;
  ssl_stapling on;
  ssl_stapling_verify on;
  # resolver 8.8.8.8 8.8.4.4 valid=300s;
  # resolver_timeout 5s;
  # Disable preloading HSTS for now.  You can use the commented out header line that includes
  # the "preload" directive if you understand the implications.
  #add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
  add_header Strict-Transport-Security "max-age=63072000; includeSubdomains";
  add_header X-Frame-Options DENY;
  add_header X-Content-Type-Options nosniff;

  location / {
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_redirect off;
    proxy_buffering off;
    proxy_pass http://app;
  }
}
